{"version":3,"file":"static/js/637.bfdf768c.chunk.js","mappings":"gSAMMA,EAAa,CACjBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,EAAaC,GACnC,OAAsCC,EAAAA,EAAAA,WAAS,UAAKN,IAApD,eAAOO,EAAP,KAAoBC,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,MAEjB,SAASC,EAAcC,GACrB,MAAwBA,EAAMC,cAAtBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACdN,GAAe,kBAAKD,GAAN,cAAoBN,EAAOa,KAPD,wCAW1C,WAA4BF,GAA5B,iEACEA,EAAMG,iBAQNN,GAASO,EAAAA,EAAAA,GAAeT,IAIxBC,GAAe,UAAKR,IAbtB,4CAX0C,sBA2B1C,OACE,kBAAMiB,OAAO,SAASC,SA5BkB,4CA4BxC,WACE,mBAAOC,QAAQ,OAAf,kBACE,+EAEF,kBACEC,KAAK,OACLnB,KAAK,OACLoB,UAAQ,EACRC,SAAUX,EACVG,MAAOP,EAAYN,QAErB,mBAAOkB,QAAQ,QAAf,oBACE,4EAEF,kBACEC,KAAK,QACLnB,KAAK,QACLoB,UAAQ,EACRC,SAAUX,EACVG,MAAOP,EAAYL,SAErB,mBAAOiB,QAAQ,WAAf,sBACE,sEAEF,kBACEC,KAAK,WACLnB,KAAK,WACLoB,UAAQ,EACRC,SAAUX,EACVG,MAAOP,EAAYJ,YAErB,mBAAQiB,KAAK,SAAb","sources":["components/Layouts/RegisterPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n//import { toast } from \"react-toastify\";\n\nimport { registerUserOp } from \"redux/auth/ops/registerUserOp\";\n\nconst INIT_CREDS = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n}\n\nexport default function RegisterPage(props) {\n  const [credentials, setCredentials] = useState({ ...INIT_CREDS });\n\n  const dispatch = useDispatch();\n\n  function onInputChange(event) {\n    const { name, value } = event.currentTarget;\n    setCredentials({ ...credentials, [name]: value });\n\n  }\n\n  async function onFormSubmit(event) {\n    event.preventDefault();\n\n    /*if (credentials.password.length < 7) {\n      toast.warn(\"Password length should be at least 7 symbols for safety reasons. Try something more complex.\");\n      return false;\n    }*/\n\n    //console.log(`posting ${credentials} to server as new user`);\n    dispatch(registerUserOp(credentials));\n    // const response = await registerUser(credentials);\n    // console.log(response);\n\n    setCredentials({ ...INIT_CREDS });\n  }\n\n  return (\n    <form action=\"submit\" onSubmit={onFormSubmit}>\n      <label htmlFor=\"name\">Name\n        <p>This name will be used to address you as a user</p>\n      </label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        required\n        onChange={onInputChange}\n        value={credentials.name}\n      />\n      <label htmlFor=\"email\">E-mail\n        <p>Your e-mail address. Will be used to log in.</p>\n      </label>\n      <input\n        type=\"email\"\n        name=\"email\"\n        required\n        onChange={onInputChange}\n        value={credentials.email}\n      />\n      <label htmlFor=\"password\">Password\n        <p>Your password to log in. Keep it safe!</p>\n      </label>\n      <input\n        type=\"password\"\n        name=\"password\"\n        required\n        onChange={onInputChange}\n        value={credentials.password}\n      />\n      <button type=\"submit\">Register</button>\n    </form>\n    );\n}"],"names":["INIT_CREDS","name","email","password","RegisterPage","props","useState","credentials","setCredentials","dispatch","useDispatch","onInputChange","event","currentTarget","value","preventDefault","registerUserOp","action","onSubmit","htmlFor","type","required","onChange"],"sourceRoot":""}